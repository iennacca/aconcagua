// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aconcagua.common/aconcagua.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from aconcagua.common/aconcagua.proto</summary>
public static partial class AconcaguaReflection {

  #region Descriptor
  /// <summary>File descriptor for aconcagua.common/aconcagua.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static AconcaguaReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CiBhY29uY2FndWEuY29tbW9uL2Fjb25jYWd1YS5wcm90byLGAQoSR2V0TWV0",
          "YWRhdGFSZXF1ZXN0EkEKD3JlcXVlc3RtZXRhZGF0YRgBIAMoCzIoLkdldE1l",
          "dGFkYXRhUmVxdWVzdC5SZXF1ZXN0bWV0YWRhdGFFbnRyeRIXCg9tZXRhZGF0",
          "YWhlYWRlcnMYAiADKAkSHAoEa2V5cxgDIAMoCzIOLlRpbWVzZXJpZXNLZXka",
          "NgoUUmVxdWVzdG1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
          "GAIgASgJOgI4ASK/AQoQR2V0TWV0YWRhdGFSZXBseRI7Cg1yZXBseW1ldGFk",
          "YXRhGAEgAygLMiQuR2V0TWV0YWRhdGFSZXBseS5SZXBseW1ldGFkYXRhRW50",
          "cnkSFwoPbWV0YWRhdGFoZWFkZXJzGAIgAygJEh8KCGRhdGFsaXN0GAMgAygL",
          "Mg0uTWV0YWRhdGFMaXN0GjQKElJlcGx5bWV0YWRhdGFFbnRyeRILCgNrZXkY",
          "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBItEBChZHZXRPYnNlcnZhdGlvbnNS",
          "ZXF1ZXN0EkUKD3JlcXVlc3RtZXRhZGF0YRgBIAMoCzIsLkdldE9ic2VydmF0",
          "aW9uc1JlcXVlc3QuUmVxdWVzdG1ldGFkYXRhRW50cnkSGgoSb2JzZXJ2YXRp",
          "b25oZWFkZXJzGAIgAygJEhwKBGtleXMYAyADKAsyDi5UaW1lc2VyaWVzS2V5",
          "GjYKFFJlcXVlc3RtZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
          "ZRgCIAEoCToCOAEizgEKFEdldE9ic2VydmF0aW9uc1JlcGx5Ej8KDXJlcGx5",
          "bWV0YWRhdGEYASADKAsyKC5HZXRPYnNlcnZhdGlvbnNSZXBseS5SZXBseW1l",
          "dGFkYXRhRW50cnkSGgoSb2JzZXJ2YXRpb25oZWFkZXJzGAIgAygJEiMKCGRh",
          "dGFsaXN0GAMgAygLMhEuT2JzZXJ2YXRpb25zTGlzdBo0ChJSZXBseW1ldGFk",
          "YXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASI5CgxN",
          "ZXRhZGF0YUxpc3QSGwoDa2V5GAEgASgLMg4uVGltZXNlcmllc0tleRIMCgRk",
          "YXRhGAIgAygJIj0KEE9ic2VydmF0aW9uc0xpc3QSGwoDa2V5GAEgASgLMg4u",
          "VGltZXNlcmllc0tleRIMCgRkYXRhGAIgAygCIjkKDVRpbWVzZXJpZXNLZXkS",
          "FAoMZGF0YWJhc2VuYW1lGAEgASgJEhIKCnNlcmllc25hbWUYAiABKAkyiQEK",
          "CUFjb25jYWd1YRI3CgtHZXRNZXRhZGF0YRITLkdldE1ldGFkYXRhUmVxdWVz",
          "dBoRLkdldE1ldGFkYXRhUmVwbHkiABJDCg9HZXRPYnNlcnZhdGlvbnMSFy5H",
          "ZXRPYnNlcnZhdGlvbnNSZXF1ZXN0GhUuR2V0T2JzZXJ2YXRpb25zUmVwbHki",
          "AEIrChFpby5ncnBjLmFjb25jYWd1YUIOQWNvbmNhZ3VhUHJvdG9QAaICA0FD",
          "QWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMetadataRequest), global::GetMetadataRequest.Parser, new[]{ "Requestmetadata", "Metadataheaders", "Keys" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetMetadataReply), global::GetMetadataReply.Parser, new[]{ "Replymetadata", "Metadataheaders", "Datalist" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetObservationsRequest), global::GetObservationsRequest.Parser, new[]{ "Requestmetadata", "Observationheaders", "Keys" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::GetObservationsReply), global::GetObservationsReply.Parser, new[]{ "Replymetadata", "Observationheaders", "Datalist" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::MetadataList), global::MetadataList.Parser, new[]{ "Key", "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ObservationsList), global::ObservationsList.Parser, new[]{ "Key", "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TimeseriesKey), global::TimeseriesKey.Parser, new[]{ "Databasename", "Seriesname" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GetMetadataRequest : pb::IMessage<GetMetadataRequest> {
  private static readonly pb::MessageParser<GetMetadataRequest> _parser = new pb::MessageParser<GetMetadataRequest>(() => new GetMetadataRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMetadataRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetadataRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetadataRequest(GetMetadataRequest other) : this() {
    requestmetadata_ = other.requestmetadata_.Clone();
    metadataheaders_ = other.metadataheaders_.Clone();
    keys_ = other.keys_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetadataRequest Clone() {
    return new GetMetadataRequest(this);
  }

  /// <summary>Field number for the "requestmetadata" field.</summary>
  public const int RequestmetadataFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_requestmetadata_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> requestmetadata_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Requestmetadata {
    get { return requestmetadata_; }
  }

  /// <summary>Field number for the "metadataheaders" field.</summary>
  public const int MetadataheadersFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_metadataheaders_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> metadataheaders_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Metadataheaders {
    get { return metadataheaders_; }
  }

  /// <summary>Field number for the "keys" field.</summary>
  public const int KeysFieldNumber = 3;
  private static readonly pb::FieldCodec<global::TimeseriesKey> _repeated_keys_codec
      = pb::FieldCodec.ForMessage(26, global::TimeseriesKey.Parser);
  private readonly pbc::RepeatedField<global::TimeseriesKey> keys_ = new pbc::RepeatedField<global::TimeseriesKey>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TimeseriesKey> Keys {
    get { return keys_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMetadataRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMetadataRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Requestmetadata.Equals(other.Requestmetadata)) return false;
    if(!metadataheaders_.Equals(other.metadataheaders_)) return false;
    if(!keys_.Equals(other.keys_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Requestmetadata.GetHashCode();
    hash ^= metadataheaders_.GetHashCode();
    hash ^= keys_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    requestmetadata_.WriteTo(output, _map_requestmetadata_codec);
    metadataheaders_.WriteTo(output, _repeated_metadataheaders_codec);
    keys_.WriteTo(output, _repeated_keys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += requestmetadata_.CalculateSize(_map_requestmetadata_codec);
    size += metadataheaders_.CalculateSize(_repeated_metadataheaders_codec);
    size += keys_.CalculateSize(_repeated_keys_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMetadataRequest other) {
    if (other == null) {
      return;
    }
    requestmetadata_.Add(other.requestmetadata_);
    metadataheaders_.Add(other.metadataheaders_);
    keys_.Add(other.keys_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          requestmetadata_.AddEntriesFrom(input, _map_requestmetadata_codec);
          break;
        }
        case 18: {
          metadataheaders_.AddEntriesFrom(input, _repeated_metadataheaders_codec);
          break;
        }
        case 26: {
          keys_.AddEntriesFrom(input, _repeated_keys_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GetMetadataReply : pb::IMessage<GetMetadataReply> {
  private static readonly pb::MessageParser<GetMetadataReply> _parser = new pb::MessageParser<GetMetadataReply>(() => new GetMetadataReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetMetadataReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetadataReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetadataReply(GetMetadataReply other) : this() {
    replymetadata_ = other.replymetadata_.Clone();
    metadataheaders_ = other.metadataheaders_.Clone();
    datalist_ = other.datalist_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetMetadataReply Clone() {
    return new GetMetadataReply(this);
  }

  /// <summary>Field number for the "replymetadata" field.</summary>
  public const int ReplymetadataFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_replymetadata_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> replymetadata_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Replymetadata {
    get { return replymetadata_; }
  }

  /// <summary>Field number for the "metadataheaders" field.</summary>
  public const int MetadataheadersFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_metadataheaders_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> metadataheaders_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Metadataheaders {
    get { return metadataheaders_; }
  }

  /// <summary>Field number for the "datalist" field.</summary>
  public const int DatalistFieldNumber = 3;
  private static readonly pb::FieldCodec<global::MetadataList> _repeated_datalist_codec
      = pb::FieldCodec.ForMessage(26, global::MetadataList.Parser);
  private readonly pbc::RepeatedField<global::MetadataList> datalist_ = new pbc::RepeatedField<global::MetadataList>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::MetadataList> Datalist {
    get { return datalist_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetMetadataReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetMetadataReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Replymetadata.Equals(other.Replymetadata)) return false;
    if(!metadataheaders_.Equals(other.metadataheaders_)) return false;
    if(!datalist_.Equals(other.datalist_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Replymetadata.GetHashCode();
    hash ^= metadataheaders_.GetHashCode();
    hash ^= datalist_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    replymetadata_.WriteTo(output, _map_replymetadata_codec);
    metadataheaders_.WriteTo(output, _repeated_metadataheaders_codec);
    datalist_.WriteTo(output, _repeated_datalist_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += replymetadata_.CalculateSize(_map_replymetadata_codec);
    size += metadataheaders_.CalculateSize(_repeated_metadataheaders_codec);
    size += datalist_.CalculateSize(_repeated_datalist_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetMetadataReply other) {
    if (other == null) {
      return;
    }
    replymetadata_.Add(other.replymetadata_);
    metadataheaders_.Add(other.metadataheaders_);
    datalist_.Add(other.datalist_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          replymetadata_.AddEntriesFrom(input, _map_replymetadata_codec);
          break;
        }
        case 18: {
          metadataheaders_.AddEntriesFrom(input, _repeated_metadataheaders_codec);
          break;
        }
        case 26: {
          datalist_.AddEntriesFrom(input, _repeated_datalist_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GetObservationsRequest : pb::IMessage<GetObservationsRequest> {
  private static readonly pb::MessageParser<GetObservationsRequest> _parser = new pb::MessageParser<GetObservationsRequest>(() => new GetObservationsRequest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetObservationsRequest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetObservationsRequest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetObservationsRequest(GetObservationsRequest other) : this() {
    requestmetadata_ = other.requestmetadata_.Clone();
    observationheaders_ = other.observationheaders_.Clone();
    keys_ = other.keys_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetObservationsRequest Clone() {
    return new GetObservationsRequest(this);
  }

  /// <summary>Field number for the "requestmetadata" field.</summary>
  public const int RequestmetadataFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_requestmetadata_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> requestmetadata_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Requestmetadata {
    get { return requestmetadata_; }
  }

  /// <summary>Field number for the "observationheaders" field.</summary>
  public const int ObservationheadersFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_observationheaders_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> observationheaders_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Observationheaders {
    get { return observationheaders_; }
  }

  /// <summary>Field number for the "keys" field.</summary>
  public const int KeysFieldNumber = 3;
  private static readonly pb::FieldCodec<global::TimeseriesKey> _repeated_keys_codec
      = pb::FieldCodec.ForMessage(26, global::TimeseriesKey.Parser);
  private readonly pbc::RepeatedField<global::TimeseriesKey> keys_ = new pbc::RepeatedField<global::TimeseriesKey>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TimeseriesKey> Keys {
    get { return keys_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetObservationsRequest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetObservationsRequest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Requestmetadata.Equals(other.Requestmetadata)) return false;
    if(!observationheaders_.Equals(other.observationheaders_)) return false;
    if(!keys_.Equals(other.keys_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Requestmetadata.GetHashCode();
    hash ^= observationheaders_.GetHashCode();
    hash ^= keys_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    requestmetadata_.WriteTo(output, _map_requestmetadata_codec);
    observationheaders_.WriteTo(output, _repeated_observationheaders_codec);
    keys_.WriteTo(output, _repeated_keys_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += requestmetadata_.CalculateSize(_map_requestmetadata_codec);
    size += observationheaders_.CalculateSize(_repeated_observationheaders_codec);
    size += keys_.CalculateSize(_repeated_keys_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetObservationsRequest other) {
    if (other == null) {
      return;
    }
    requestmetadata_.Add(other.requestmetadata_);
    observationheaders_.Add(other.observationheaders_);
    keys_.Add(other.keys_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          requestmetadata_.AddEntriesFrom(input, _map_requestmetadata_codec);
          break;
        }
        case 18: {
          observationheaders_.AddEntriesFrom(input, _repeated_observationheaders_codec);
          break;
        }
        case 26: {
          keys_.AddEntriesFrom(input, _repeated_keys_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class GetObservationsReply : pb::IMessage<GetObservationsReply> {
  private static readonly pb::MessageParser<GetObservationsReply> _parser = new pb::MessageParser<GetObservationsReply>(() => new GetObservationsReply());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GetObservationsReply> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetObservationsReply() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetObservationsReply(GetObservationsReply other) : this() {
    replymetadata_ = other.replymetadata_.Clone();
    observationheaders_ = other.observationheaders_.Clone();
    datalist_ = other.datalist_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GetObservationsReply Clone() {
    return new GetObservationsReply(this);
  }

  /// <summary>Field number for the "replymetadata" field.</summary>
  public const int ReplymetadataFieldNumber = 1;
  private static readonly pbc::MapField<string, string>.Codec _map_replymetadata_codec
      = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
  private readonly pbc::MapField<string, string> replymetadata_ = new pbc::MapField<string, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<string, string> Replymetadata {
    get { return replymetadata_; }
  }

  /// <summary>Field number for the "observationheaders" field.</summary>
  public const int ObservationheadersFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_observationheaders_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> observationheaders_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Observationheaders {
    get { return observationheaders_; }
  }

  /// <summary>Field number for the "datalist" field.</summary>
  public const int DatalistFieldNumber = 3;
  private static readonly pb::FieldCodec<global::ObservationsList> _repeated_datalist_codec
      = pb::FieldCodec.ForMessage(26, global::ObservationsList.Parser);
  private readonly pbc::RepeatedField<global::ObservationsList> datalist_ = new pbc::RepeatedField<global::ObservationsList>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::ObservationsList> Datalist {
    get { return datalist_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GetObservationsReply);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GetObservationsReply other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!Replymetadata.Equals(other.Replymetadata)) return false;
    if(!observationheaders_.Equals(other.observationheaders_)) return false;
    if(!datalist_.Equals(other.datalist_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= Replymetadata.GetHashCode();
    hash ^= observationheaders_.GetHashCode();
    hash ^= datalist_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    replymetadata_.WriteTo(output, _map_replymetadata_codec);
    observationheaders_.WriteTo(output, _repeated_observationheaders_codec);
    datalist_.WriteTo(output, _repeated_datalist_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += replymetadata_.CalculateSize(_map_replymetadata_codec);
    size += observationheaders_.CalculateSize(_repeated_observationheaders_codec);
    size += datalist_.CalculateSize(_repeated_datalist_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GetObservationsReply other) {
    if (other == null) {
      return;
    }
    replymetadata_.Add(other.replymetadata_);
    observationheaders_.Add(other.observationheaders_);
    datalist_.Add(other.datalist_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          replymetadata_.AddEntriesFrom(input, _map_replymetadata_codec);
          break;
        }
        case 18: {
          observationheaders_.AddEntriesFrom(input, _repeated_observationheaders_codec);
          break;
        }
        case 26: {
          datalist_.AddEntriesFrom(input, _repeated_datalist_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class MetadataList : pb::IMessage<MetadataList> {
  private static readonly pb::MessageParser<MetadataList> _parser = new pb::MessageParser<MetadataList>(() => new MetadataList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<MetadataList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MetadataList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MetadataList(MetadataList other) : this() {
    Key = other.key_ != null ? other.Key.Clone() : null;
    data_ = other.data_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MetadataList Clone() {
    return new MetadataList(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private global::TimeseriesKey key_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TimeseriesKey Key {
    get { return key_; }
    set {
      key_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private static readonly pb::FieldCodec<string> _repeated_data_codec
      = pb::FieldCodec.ForString(18);
  private readonly pbc::RepeatedField<string> data_ = new pbc::RepeatedField<string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<string> Data {
    get { return data_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as MetadataList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(MetadataList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Key, other.Key)) return false;
    if(!data_.Equals(other.data_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (key_ != null) hash ^= Key.GetHashCode();
    hash ^= data_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (key_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Key);
    }
    data_.WriteTo(output, _repeated_data_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (key_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
    }
    size += data_.CalculateSize(_repeated_data_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(MetadataList other) {
    if (other == null) {
      return;
    }
    if (other.key_ != null) {
      if (key_ == null) {
        key_ = new global::TimeseriesKey();
      }
      Key.MergeFrom(other.Key);
    }
    data_.Add(other.data_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (key_ == null) {
            key_ = new global::TimeseriesKey();
          }
          input.ReadMessage(key_);
          break;
        }
        case 18: {
          data_.AddEntriesFrom(input, _repeated_data_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class ObservationsList : pb::IMessage<ObservationsList> {
  private static readonly pb::MessageParser<ObservationsList> _parser = new pb::MessageParser<ObservationsList>(() => new ObservationsList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ObservationsList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObservationsList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObservationsList(ObservationsList other) : this() {
    Key = other.key_ != null ? other.Key.Clone() : null;
    data_ = other.data_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObservationsList Clone() {
    return new ObservationsList(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private global::TimeseriesKey key_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::TimeseriesKey Key {
    get { return key_; }
    set {
      key_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_data_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> data_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> Data {
    get { return data_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ObservationsList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ObservationsList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(Key, other.Key)) return false;
    if(!data_.Equals(other.data_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (key_ != null) hash ^= Key.GetHashCode();
    hash ^= data_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (key_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(Key);
    }
    data_.WriteTo(output, _repeated_data_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (key_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
    }
    size += data_.CalculateSize(_repeated_data_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ObservationsList other) {
    if (other == null) {
      return;
    }
    if (other.key_ != null) {
      if (key_ == null) {
        key_ = new global::TimeseriesKey();
      }
      Key.MergeFrom(other.Key);
    }
    data_.Add(other.data_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (key_ == null) {
            key_ = new global::TimeseriesKey();
          }
          input.ReadMessage(key_);
          break;
        }
        case 18:
        case 21: {
          data_.AddEntriesFrom(input, _repeated_data_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class TimeseriesKey : pb::IMessage<TimeseriesKey> {
  private static readonly pb::MessageParser<TimeseriesKey> _parser = new pb::MessageParser<TimeseriesKey>(() => new TimeseriesKey());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TimeseriesKey> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::AconcaguaReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeseriesKey() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeseriesKey(TimeseriesKey other) : this() {
    databasename_ = other.databasename_;
    seriesname_ = other.seriesname_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeseriesKey Clone() {
    return new TimeseriesKey(this);
  }

  /// <summary>Field number for the "databasename" field.</summary>
  public const int DatabasenameFieldNumber = 1;
  private string databasename_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Databasename {
    get { return databasename_; }
    set {
      databasename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "seriesname" field.</summary>
  public const int SeriesnameFieldNumber = 2;
  private string seriesname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Seriesname {
    get { return seriesname_; }
    set {
      seriesname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TimeseriesKey);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TimeseriesKey other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Databasename != other.Databasename) return false;
    if (Seriesname != other.Seriesname) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Databasename.Length != 0) hash ^= Databasename.GetHashCode();
    if (Seriesname.Length != 0) hash ^= Seriesname.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Databasename.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Databasename);
    }
    if (Seriesname.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Seriesname);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Databasename.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Databasename);
    }
    if (Seriesname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Seriesname);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TimeseriesKey other) {
    if (other == null) {
      return;
    }
    if (other.Databasename.Length != 0) {
      Databasename = other.Databasename;
    }
    if (other.Seriesname.Length != 0) {
      Seriesname = other.Seriesname;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Databasename = input.ReadString();
          break;
        }
        case 18: {
          Seriesname = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
